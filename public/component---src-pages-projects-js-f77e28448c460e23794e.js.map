{"version":3,"sources":["webpack:///./src/components/project-item.js","webpack:///./src/components/project-group.js","webpack:///./src/components/info.js","webpack:///./src/components/play-cli.js","webpack:///./src/pages/projects.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/header.js","webpack:///./src/components/navigation.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["ProjectItem","props","react_default","a","createElement","className","src","image","alt","name","esm","content","placement","arrow","href","repo","target","index_es","icon","size","color","onClick","showCLI","id","value","play","showInfo","projectGroup","state","projects","componentDidMount","console","log","this","render","_this2","map","project","components_project_item","key","Component","InfoApp","class","closeInfo","summary","techArray","tech","AppCLI","closeCLI","Portfolio","_this","_Component","call","chosenProject","filter","setState","Object","assign","isInfoShowing","isProjectGroupShowing","currentProject","isCLIShowing","layout","project_group","components_info","components_play_cli","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","finalData","Fragment","children","Consumer","m","module","exports","require","default","Header","siteSymbol","role","aria-label","gatsby_browser_entry","to","Nav","delay","activeClassName","Footer","components_navigation","Layout","Helmet_default","site","siteMetadata","symbol","meta","lang","components_header","footer","_991711005","ProdPageRenderer","location","pageResources","InternalPageRenderer","json"],"mappings":"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","file":"component---src-pages-projects-js-f77e28448c460e23794e.js","sourcesContent":["import React from 'react'\nimport Tippy from '@tippy.js/react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport './project-item.css'\n\nconst ProjectItem = props => (\n  <div className=\"column\">\n    <div className=\"card\">\n      <figure className=\"card effect-terry\">\n        <img src={props.image} alt={props.alt} />\n        <figcaption>\n          <h2>{props.name}</h2>\n          <p>\n            <div className=\"icon-link\">\n              <Tippy\n                content=\"GitHub\"\n                className=\"GitHub\"\n                placement=\"right-end\"\n                arrow=\"true\"\n              >\n                <span className=\"icon\">\n                  <a href={props.repo} target=\"__blank\">\n                    <FontAwesomeIcon\n                      icon={['fab', 'github']}\n                      size=\"md\"\n                      color=\"white\"\n                    />\n                  </a>\n                </span>\n              </Tippy>\n            </div>\n          </p>\n          <p>\n            <div className=\"icon-link\">\n              <Tippy\n                content=\"Play\"\n                className=\"Play\"\n                placement=\"right-end\"\n                arrow=\"true\"\n              >\n                <span\n                  className=\"icon\"\n                  onClick={() => props.showCLI(props.id)}\n                  value={props.id}\n                >\n                  <a href={props.play} target=\"__blank\">\n                    <FontAwesomeIcon\n                      icon=\"play-circle\"\n                      size=\"md\"\n                      color=\"white\"\n                    />\n                  </a>\n                </span>\n              </Tippy>\n            </div>\n          </p>\n          <p>\n            <div className=\"icon-link\">\n              <Tippy\n                content=\"Info\"\n                className=\"Info\"\n                placement=\"right-end\"\n                arrow=\"true\"\n              >\n                <span\n                  className=\"icon\"\n                  onClick={() => props.showInfo(props.id)}\n                  value={props.id}\n                >\n                  <FontAwesomeIcon icon=\"info-circle\" size=\"md\" color=\"white\" />\n                </span>\n              </Tippy>\n            </div>\n          </p>\n        </figcaption>\n      </figure>\n    </div>\n  </div>\n)\n\nexport default ProjectItem","import React, { Component } from 'react'\nimport MyProject from '../components/project-item'\nimport projects from '../project_data/project-array.json'\n\nclass projectGroup extends Component {\n  state = {\n    projects,\n  }\n\n  componentDidMount() {\n    console.log(this.state.projects)\n  }\n\n  render() {\n    return (\n      <div>\n        <section>\n          <div className=\"columns is-gapless is-multiline\">\n            {this.state.projects.map(project => (\n              <MyProject\n                id={project.id}\n                key={project.id}\n                name={project.name}\n                image={project.image}\n                alt={project.alt}\n                repo={project.repo}\n                play={project.play}\n                showInfo={this.props.showInfo}\n                showCLI={this.props.showCLI}\n              />\n            ))}\n          </div>\n        </section>\n      </div>\n    )\n  }\n}\nexport default projectGroup","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport './info.css'\n\nconst InfoApp = props => {\n  console.log(props)\n  return (\n      <div id=\"info-card\" className=\"card is-shadowless\">\n        <header className=\"card-header is-shadowless\">\n          <p class=\"card-header-title is-centered is-size-3 has-text-white  custom-header\">\n            {props.name}\n          </p>\n          <div className=\"card-header-icon\">\n            <span className=\"icon\">\n              <FontAwesomeIcon\n                icon={'times-circle'}\n                color=\"white\"\n                onClick={props.closeInfo}\n              />\n            </span>\n          </div>\n        </header>\n        <div className=\"card-content\">\n          <div className=\"content has-text-center has-text-white\">\n            {props.summary}\n          </div>\n          <header className=\"card-header is-shadowless\">\n            <p className=\"card-header-title is-centered is-size-3 has-text-white\">\n              Technologies\n            </p>\n          </header>\n          <section className=\"section tech-stack\">\n            <div className=\"columns\">\n              {props.techArray.map(tech => (\n                <div className=\"column\">\n                  <img className=\"logo-image\" src={tech} alt={props.alt} />\n                </div>\n              ))}\n            </div>\n          </section>\n        </div>\n      </div>\n  )\n}\n\nexport default InfoApp\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport './play-cli.css'\n\nconst AppCLI = props => {\n  console.log(props)\n  return (\n    <div className=\"column\">\n      <div id=\"info-card\" className=\"card is-shadowless\">\n        <header className=\"card-header is-shadowless\">\n          <p class=\"card-header-title is-centered is-size-3 has-text-white custom-header\">\n            {props.name}\n          </p>\n          <div className=\"card-header-icon\">\n            <span className=\"icon\">\n              <FontAwesomeIcon\n                icon={'times-circle'}\n                color=\"white\"\n                onClick={props.closeCLI}\n              />\n            </span>\n          </div>\n        </header>\n        <section className=\"section\">\n          <div className=\"card-content\">\n            <div className=\"content is-centered has-text-white\">\n              This is a Command Line Interface Application and requires it to be\n              run from the Command Line or Terminal. Please visit the GitHub\n              Repository and follow the instillation steps located in the ReadMe\n              to use the app.\n            </div>\n          </div>\n          <a href={props.repo} target=\"__blank\">\n            <FontAwesomeIcon icon={['fab', 'github']} size=\"5x\" color=\"white\" />\n          </a>\n        </section>\n        <header className=\"card-header is-shadowless\">\n          <p className=\"card-header-title is-centered is-size-3 has-text-white\">\n            Technologies\n          </p>\n        </header>\n        <section className=\"section tech-stack\">\n          <div className=\"columns is-gapless\">\n            {props.techArray.map(tech => (\n              <div className=\"column\">\n                <img className=\"logo-image\" src={tech} alt={props.alt} />\n              </div>\n            ))}\n          </div>\n        </section>\n      </div>\n    </div>\n  )\n}\n\nexport default AppCLI","import React, { Component } from 'react'\nimport Layout from '../components/layout'\nimport ProjectGroup from '../components/project-group'\nimport ProjectInfo from '../components/info'\nimport PlayCLI from '../components/play-cli'\nimport projects from '../project_data/project-array.json'\nimport './projects.css'\n\nclass Portfolio extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isInfoShowing: false,\n      isCLIShowing: false,\n      isProjectGroupShowing: true,\n      currentProject: {},\n      projects: projects\n    }\n  }\n\n  showInfo = (id) => {\n   const chosenProject = this.state.projects.filter( project => {return project.id===id} )\n    this.setState({\n      ...this.state,\n      isInfoShowing: true,\n      isProjectGroupShowing: false,\n      currentProject: chosenProject[0]\n    })\n  }\n\n  closeInfo = () => {\n    this.setState({\n      ...this.state,\n      isInfoShowing: false,\n      isProjectGroupShowing: true\n    })\n  }\n\n  showCLI = (id) => {\n    const chosenProject = this.state.projects.filter( project => {return project.id===id} )\n    this.setState({\n      ...this.state,\n      isCLIShowing: id === 3 || id === 16 ? true:false,\n      isProjectGroupShowing: id === 3 || id === 16 ? false:true,\n      currentProject: chosenProject[0]\n    })\n    console.log(chosenProject)\n  }\n\n  closeCLI = () => {\n    this.setState({\n      ...this.state,\n      isCLIShowing: false,\n      isProjectGroupShowing: true\n    })\n  }\n\n  render() {\n    return (\n      <Layout>\n        <div id=\"portfolio-card\" className=\"card\">\n          <div className=\"columns is-gapless\">\n            {this.state.isProjectGroupShowing && <ProjectGroup showInfo={this.showInfo} showCLI={this.showCLI}/>}\n\n            {this.state.isInfoShowing && \n              <ProjectInfo \n                id={this.state.currentProject.id}\n                key={this.state.currentProject.id}\n                name={this.state.currentProject.name}\n                summary={this.state.currentProject.summary}\n                techArray={this.state.currentProject.techArray}\n                showInfo={this.showInfo} \n                closeInfo={this.closeInfo}\n              />}\n\n           {this.state.isCLIShowing && \n              <PlayCLI\n                id={this.state.currentProject.id}\n                key={this.state.currentProject.id}\n                name={this.state.currentProject.name}\n                repo={this.state.currentProject.repo}\n                techArray={this.state.currentProject.techArray}\n                showCLI={this.showCLI}\n                closeCLI={this.closeCLI} \n              />}\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default Portfolio\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Tippy from '@tippy.js/react'\nimport './header.css'\n\nconst Header = ({ siteSymbol }) => (\n  <div className=\"hero-head\">\n    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <Tippy content=\"Home\" className=\"Home\" placement=\"right\" arrow=\"true\">\n            <Link to=\"/\" className=\"navbar-item \">\n              <div className=\"initials\">{siteSymbol}</div>\n            </Link>\n          </Tippy>\n        </div>\n      </div>\n    </nav>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Tippy, { TippyGroup } from '@tippy.js/react'\nimport './navigation.css'\n\nconst Nav = () => (\n  <ul>\n    <TippyGroup delay={1000}>\n      <li className=\"is-hidden-mobile\">\n        <Link to=\"/dashboard\" activeClassName=\"active-link\">\n          <Tippy\n            content=\"Dashboard\"\n            className=\"Dashboard\"\n            placement=\"right-end\"\n            arrow=\"true\"\n          >\n            <span className=\"icon\">\n              <FontAwesomeIcon icon=\"th-large\" size=\"lg\" color=\"black\" />\n            </span>\n          </Tippy>\n        </Link>\n      </li>\n      <li>\n        <Link to=\"/projects\" activeClassName=\"active-link\">\n          <Tippy\n            content=\"Projects\"\n            className=\"Projects\"\n            placement=\"right-end\"\n            arrow=\"true\"\n          >\n            <span className=\"icon\">\n              <FontAwesomeIcon icon=\"briefcase\" size=\"lg\" color=\"black\" />\n            </span>\n          </Tippy>\n        </Link>\n      </li>\n      <li>\n        <Link to=\"/about\" activeClassName=\"active-link\">\n          <Tippy\n            content=\"About\"\n            className=\"About\"\n            placement=\"right-end\"\n            arrow=\"true\"\n          >\n            <span className=\"icon\">\n              <FontAwesomeIcon icon=\"brain\" size=\"lg\" color=\"black\" />\n            </span>\n          </Tippy>\n        </Link>\n      </li>\n      <li>\n        <Link to=\"/contact\" activeClassName=\"active-link\">\n          <Tippy\n            content=\"Contact\"\n            className=\"Contact\"\n            placement=\"right-end\"\n            arrow=\"true\"\n          >\n            <span className=\"icon\">\n              <FontAwesomeIcon icon=\"address-card\" size=\"lg\" color=\"black\" />\n            </span>\n          </Tippy>\n        </Link>\n      </li>\n    </TippyGroup>\n  </ul>\n)\n\nexport default Nav","import React from 'react'\nimport Navigation from './navigation'\n\nconst Footer = () => (\n  <div className=\"hero-foot\">\n    <nav className=\"tabs is-fullwidth\">\n      <div className=\"container\">\n        <Navigation />\n      </div>\n    </nav>\n  </div>\n)\n\nexport default Footer","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Header from './header'\nimport Footer from './footer'\nimport './all.scss'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteSymbolQuery {\n        site {\n          siteMetadata {\n            symbol\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div>\n        <Helmet\n          siteSymbol={data.site.siteMetadata.symbol}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <section className=\"hero is-fullheight\">\n          <Header siteSymbol={data.site.siteMetadata.symbol} />\n          <div className=\"hero-body\">\n            <div className=\"container has-text-centered\">\n              <div className=\"site-content\">{children}</div>\n            </div>\n          </div>\n          <Footer />\n        </section>\n      </div>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}